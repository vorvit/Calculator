<Window x:Class="Calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calculator"
        xmlns:vm="clr-namespace:Calculator.ViewModel"
        mc:Ignorable="d"
        Title="Калькулятор" Background="Black" Width="410" Height="600" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <!--Привязка MainWindowViewModel к представлению View-->
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <!--Создание ресурсов окна: шаблоны стилей кнопок-->
    <Window.Resources>
        <!--Cтиль кнопок-->
        <Style TargetType="Button">
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--Отрисовка кнопки с заданием своств для возможности изменения масштаба в анимации-->
                            <Border x:Name="backgroundElement" BorderThickness="0" CornerRadius="50" Background="{TemplateBinding Background}" RenderTransformOrigin=".5 .5">
                                <Border.RenderTransform>
                                     <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                            </Border>
                            <!--Создание и привязка свойств текста кнопок-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--Создание тригера изменяющего цвет кнопки при нажатии-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="backgroundElement" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            </Trigger>
                            <!--Создание тригера запускающего анимацию изменения размера кнопки при нажатии-->
                            <EventTrigger RoutedEvent="Button.Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="backgroundElement" FillBehavior="Stop">
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.7" AutoReverse="True"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.7" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Создание стилей кнопок разного цвета на основе общего стиля-->
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="orangeButton">
            <Setter Property="Background" Value="#FE9E09"/>
            <Setter Property="BorderBrush" Value="#FBC78E"/>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="darkGreyButton">
            <Setter Property="Background" Value="#343434"/>
            <Setter Property="BorderBrush" Value="#737373"/>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="greyButton">
            <Setter Property="Background" Value="#a5a5a5"/>
            <Setter Property="BorderBrush" Value="#D9D9D7"/>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="blueButton">
            <Setter Property="Background" Value="#4285F4"/>
            <Setter Property="BorderBrush" Value="#95b6ed"/>
        </Style>
    </Window.Resources>

    <!--Создание элементов калькулятора-->
    <DockPanel>
        <!--Создание меню с командой сохранения истории в файл-->
        <Menu DockPanel.Dock="Top" MinHeight="19" Background="#343434" BorderThickness="0">
            <MenuItem Header="История" Foreground="White">
                <MenuItem Header="Сохранить" Command="{Binding SaveCommand}" Margin="0" Foreground="Black" MaxHeight="19"/>
            </MenuItem>
        </Menu>
        
        <!--Создание разбивочной сетки для кнопок и экрана-->
        <Grid Margin="5, 5, 5, 15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--Создание экрана с встроенным экраном истории вычисления и командой копирования результата в буфер обмена-->
            <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="6" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="#a5a5a5" Grid.Row="0" Grid.RowSpan="2" BorderThickness="3" CornerRadius="25"/>
                <TextBlock x:Name="DisplayBox" Text="{Binding Display, Mode=TwoWay}" FontSize="60" Foreground="White" Margin="20 0 20 20" Grid.Row="1" TextWrapping="Wrap" TextAlignment="Right">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Копировать" Command="{Binding CopyCommand}"/>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
                <TextBlock x:Name="ExpressionBox" Text="{Binding Path=FullExpression, Mode=TwoWay}" FontSize="20" Foreground="#A5A5A5" Margin="27 20 27 0" Grid.Row="0" TextAlignment="Right"/>
            </Grid>

            <!--Создание кнопок со ссылками на соответствующие им команды и стили-->
            <Button Command="{Binding SingularOperationButtonPressCommand}" CommandParameter="%" Grid.Column="0" Grid.Row="1" Style="{StaticResource blueButton}" Content="%"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="±" Grid.Column="0" Grid.Row="2" Style="{StaticResource blueButton}" Content="±"/>
            <Button Command="{Binding SingularOperationButtonPressCommand}" CommandParameter="√х" Grid.Column="0" Grid.Row="3" Style="{StaticResource blueButton}" Content="√х"/>
            <Button Command="{Binding SingularOperationButtonPressCommand}" CommandParameter="х²" Grid.Column="0" Grid.Row="4" Style="{StaticResource blueButton}" Content="х²"/>
            <Button Command="{Binding SingularOperationButtonPressCommand}" CommandParameter="1/x" Grid.Column="0" Grid.Row="5" Style="{StaticResource blueButton}" Content="1/x"/>

            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="←" Grid.Column="1" Grid.Row="1" Style="{StaticResource greyButton}" Content="←"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="7" Grid.Column="1" Grid.Row="2" Style="{StaticResource darkGreyButton}" Content="7"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="4" Grid.Column="1" Grid.Row="3" Style="{StaticResource darkGreyButton}" Content="4"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="1" Grid.Column="1" Grid.Row="4" Style="{StaticResource darkGreyButton}" Content="1"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="0" Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="2" Style="{StaticResource darkGreyButton}" Content="0"/>

            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="CE" Grid.Column="2" Grid.Row="1" Style="{StaticResource greyButton}" Content="CE"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="8" Grid.Column="2" Grid.Row="2" Style="{StaticResource darkGreyButton}" Content="8"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="5" Grid.Column="2" Grid.Row="3" Style="{StaticResource darkGreyButton}" Content="5"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="2" Grid.Column="2" Grid.Row="4" Style="{StaticResource darkGreyButton}" Content="2"/>

            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="C" Grid.Column="3" Grid.Row="1" Style="{StaticResource greyButton}" Content="C"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="9" Grid.Column="3" Grid.Row="2" Style="{StaticResource darkGreyButton}" Content="9"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="6" Grid.Column="3" Grid.Row="3" Style="{StaticResource darkGreyButton}" Content="6"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="3" Grid.Column="3" Grid.Row="4" Style="{StaticResource darkGreyButton}" Content="3"/>
            <Button Command="{Binding DigitButtonPressCommand}" CommandParameter="," Grid.Column="3" Grid.Row="5" Style="{StaticResource darkGreyButton}" Content=","/>

            <Button Command="{Binding OperationButtonPressCommand}" CommandParameter="/" Grid.Column="4" Grid.Row="1" Content="/" Style="{StaticResource orangeButton}"/>
            <Button Command="{Binding OperationButtonPressCommand}" CommandParameter="*" Grid.Column="4" Grid.Row="2" Content="*" Style="{StaticResource orangeButton}"/>
            <Button Command="{Binding OperationButtonPressCommand}" CommandParameter="-" Grid.Column="4" Grid.Row="3" Content="-" Style="{StaticResource orangeButton}"/>
            <Button Command="{Binding OperationButtonPressCommand}" CommandParameter="+" Grid.Column="4" Grid.Row="4" Content="+" Style="{StaticResource orangeButton}"/>
            <Button Command="{Binding OperationButtonPressCommand}" CommandParameter="=" Grid.Column="4" Grid.Row="5" Content="=" IsDefault="True" Style="{StaticResource orangeButton}"/>
        </Grid>
    </DockPanel>
</Window>